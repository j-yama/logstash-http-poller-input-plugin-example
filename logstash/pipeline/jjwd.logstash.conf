input {
    http_poller {
        # 接続先URL
        #   複数指定することも可能。
        #   それぞれ取得した結果はマージされず、独立して取得される。
        #   今回は「1時間降水量」「最高気温」「最低気温」を取得する。
        urls => {
            rain1h => "http://jjwd.info/data/amedas-rain-1h-recent.json"
            maxtemperature => "http://jjwd.info/data/amedas-max-temperature-recent.json"
            mintemperature => "http://jjwd.info/data/amedas-min-temperature-recent.json"
        }
        # 接続時タイムアウト時間
        #   単位は秒。
        request_timeout => 60
        # 接続間隔
        #   今回は「毎秒10秒」のように一定間隔で実行する"every"を使用しているが、
        #   特定の時間に実行する"at"、
        #   cron形式で記述できる"cron"
        #   などもフォーマットとして使用可能。
        schedule => { every => "1h"}
        # データ形式
        #   "json"を指定すると自動で取得したJSONデータがパースされる。
        codec => "json"
    }
}

filter {
    # Logstashでは明示的に型を指定しない限り、すべて"String"型としてElasticsearchに投入される。
    # この場合、Kibanaで可視化する際に、数値として扱うことができなくなるため、
    # 可視化に使用するフィールドのみ数値として扱えるよう設定する必要がある。
    # 通常は"index template"などを用意し、elasticsearch output pluginで指定することが多いが、
    # 今回は簡略化のために、convertを使用する。
    mutate {
        convert => {
            "rain1h" => "float"
            "maxTemp" => "float"
            "minTemp" => "float"
        }
    }
    # Kibanaの"Region Map"で可視化を行う場合、
    # 漢字表記の県名が格納されているフィールドを参照して地図上に可視化することが可能である。
    # 今回、該当するフィールドは"pref"だが、"北海道"のみ、県名だけでなく、
    # "北海道宗谷地方"、"北海道上川地方"のように地方名まで入っている。
    # これでは、"Region Map"で可視化できないため、
    # "pref"フィールドが"北海道"で始まる文字列だった場合は、"北海道"に置換する。
    if [pref] =~ "北海道.*" {
        mutate {
            replace => { "pref" => "北海道" }
        }
    }
}

output {
    elasticsearch {
        hosts => "elasticsearch:9200"
        index => "jjwd-%{+YYYY.MM.dd}"
    }
}
